package ui;

import java.util.Map;
import javax.swing.JOptionPane;
import logica.Categoria.Categoria;
import logica.Fabrica;
import logica.IController;
import logica.DTO.DTOCategoria;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author klaas
 */
public class AltaDeCategoria extends javax.swing.JInternalFrame {

    private IController controller = Fabrica.getInstance();
    
    /**
     * Creates new form Alta_Categoria
     */
    public AltaDeCategoria() {
        initComponents();
        
        llenarTabla();  //mostrar todas las Categorias disponibles.
        
        catPadreInput.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void llenarTabla()
    {
        Map<String, Categoria> almacenDatos = controller.getCategorias();
        //int cantidadFilas = almacenDatos.size();    //Se obtiene la cantidad de filas necesarias.
        String[] columnas = {"Categorías disponibles:"};
        
        DefaultTableModel tabla = new DefaultTableModel(columnas, 0);
        
        for (Categoria cat : almacenDatos.values()) 
        {
            String nombreCat = cat.getNombreCategoria();
            //Queda pendiente agregar las subcategorias a la vista de ser necesario.
            tabla.addRow(new Object[]{nombreCat});
        }
        
        listaCategorias.setModel(tabla);
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollLista = new javax.swing.JScrollPane();
        listaCategorias = new javax.swing.JTable();
        subTitulo = new javax.swing.JLabel();
        labelAgregarCategoria = new javax.swing.JLabel();
        newCat = new javax.swing.JTextField();
        botonAgregarCategoria = new javax.swing.JButton();
        catPadreInput = new javax.swing.JTextField();
        esSubCategoriaCheck = new javax.swing.JCheckBox();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Agregar Nueva Categoría...");
        setToolTipText("Añadir");
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                formFocusLost(evt);
            }
        });

        scrollLista.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                scrollListaFocusLost(evt);
            }
        });

        listaCategorias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nombre Categoria", "Subcategorías"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        scrollLista.setViewportView(listaCategorias);
        if (listaCategorias.getColumnModel().getColumnCount() > 0) {
            listaCategorias.getColumnModel().getColumn(0).setMinWidth(110);
            listaCategorias.getColumnModel().getColumn(0).setPreferredWidth(120);
            listaCategorias.getColumnModel().getColumn(0).setMaxWidth(130);
        }

        subTitulo.setText("Categorías disponibles actualmente");

        labelAgregarCategoria.setText("Añadir categoría nueva");

        newCat.setText("Ingrese nombre categoría...");
        newCat.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                newCatFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                newCatFocusLost(evt);
            }
        });
        newCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newCatActionPerformed(evt);
            }
        });

        botonAgregarCategoria.setText("Agregar...");
        botonAgregarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarCategoriaActionPerformed(evt);
            }
        });

        catPadreInput.setText("Es subcategoría de...");
        catPadreInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                catPadreInputFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                catPadreInputFocusLost(evt);
            }
        });
        catPadreInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                catPadreInputActionPerformed(evt);
            }
        });

        esSubCategoriaCheck.setText("Es Subcategoría");
        esSubCategoriaCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                esSubCategoriaCheckActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(labelAgregarCategoria)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(esSubCategoriaCheck))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(newCat, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(botonAgregarCategoria)
                            .addGap(6, 6, 6)))
                    .addComponent(scrollLista, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subTitulo)
                    .addComponent(catPadreInput, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(subTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollLista, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAgregarCategoria)
                    .addComponent(esSubCategoriaCheck))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonAgregarCategoria))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(catPadreInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void scrollListaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_scrollListaFocusLost
        //Se recupera el texto si no se escribe nada y quitan el foco ahi...

    }//GEN-LAST:event_scrollListaFocusLost

    private void newCatFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newCatFocusGained
        //Con esto, si se hace clic se quita la label...
        if (newCat.getText().equals("Ingrese nombre categoría...")) 
        {
            newCat.setText("");    
        }
    }//GEN-LAST:event_newCatFocusGained

    private void newCatFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newCatFocusLost
        //Se recupera el texto si no se escribe nada y quitan el foco ahi...
        if (newCat.getText().isEmpty()) 
        {
             newCat.setText("Ingrese nombre categoría...");
        }
    }//GEN-LAST:event_newCatFocusLost

    private void newCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newCatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newCatActionPerformed

    private void botonAgregarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarCategoriaActionPerformed
 
        if(newCat.getText().isEmpty() && catPadreInput.getText().equals("Ingrese nombre categoría..."))    //Si no puso nada...
        {
            JOptionPane.showMessageDialog(this, "Ingrese un nombre de categoría!");
        }
        
        if(!newCat.getText().equals("Ingrese nombre categoría...") && !catPadreInput.getText().equals("Es subcategoría de..."))  //Si agrega categoria y subcat...
        {
            DTOCategoria temp = new DTOCategoria(newCat.getText(),catPadreInput.getText()); 
            
            if(controller.altaDeCategoria(temp))    //Se ingresa la Subcategoría.
            {
                JOptionPane.showMessageDialog(this, "Subcategoría ingresada correctamente!");
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Esa subcategoría ya existe!");
                catPadreInput.setText("Es subcategoría de...");
            }
        }
        
        if(!newCat.getText().equals("Ingrese nombre categoría...") && catPadreInput.getText().equals("Es subcategoría de..."))  //Si es categoria padre
        {
            DTOCategoria temp = new DTOCategoria(newCat.getText()); 
            if(controller.altaDeCategoria(temp))    //Se ingresa la Categoría.
            {
                JOptionPane.showMessageDialog(this, "Categoría ingresada correctamente!");
                newCat.setText("Ingrese nombre categoría...");
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Esa categoría ya existe!");
                newCat.setText("Ingrese nombre categoría...");
            }
        }

            llenarTabla();  //Se actualizan los datos
        
    }//GEN-LAST:event_botonAgregarCategoriaActionPerformed

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        //TODO
    }//GEN-LAST:event_formFocusGained

    private void formFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusLost

        //TODO
    }//GEN-LAST:event_formFocusLost

    private void esSubCategoriaCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_esSubCategoriaCheckActionPerformed
        
        if(esSubCategoriaCheck.isSelected())
        {
            catPadreInput.setVisible(true); //Si está presionado aparece el recuadro
        }
        if(!esSubCategoriaCheck.isSelected())
        {
            catPadreInput.setVisible(false); //Si lo des-selecciona.
            catPadreInput.setText("Es subcategoría de...");  //Reinicia.
        }
        
        catPadreInput.getParent().revalidate();
    }//GEN-LAST:event_esSubCategoriaCheckActionPerformed

    private void catPadreInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catPadreInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_catPadreInputActionPerformed

    private void catPadreInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_catPadreInputFocusGained
        
        if (catPadreInput.getText().equals("Es subcategoría de...")) 
        {
             catPadreInput.setText("");
        }
    }//GEN-LAST:event_catPadreInputFocusGained

    private void catPadreInputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_catPadreInputFocusLost
        
        if (catPadreInput.getText().isEmpty()) 
        {
             catPadreInput.setText("Es subcategoría de...");
        }
    }//GEN-LAST:event_catPadreInputFocusLost

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAgregarCategoria;
    private javax.swing.JTextField catPadreInput;
    private javax.swing.JCheckBox esSubCategoriaCheck;
    private javax.swing.JLabel labelAgregarCategoria;
    private javax.swing.JTable listaCategorias;
    private javax.swing.JTextField newCat;
    private javax.swing.JScrollPane scrollLista;
    private javax.swing.JLabel subTitulo;
    // End of variables declaration//GEN-END:variables
}
